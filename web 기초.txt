web 기초

http
서버와 클라이언트가 데이터를 주고받기 위한 프로토콜(통신규약)
클라이언트 1접속 -2요청-> 서버 -3응답-> 클라이언트 연결끊김
*서버는 클라이언트의 요청을 받음과 동시에 연결후 응답을 보낸후 바로 연결을 끊는다 (클라이언트가 바로 재요청시에도 서버는 클라이언트가 이전에 뭘 했는지 알수 없다)-> 불특정 다수에게 적합하다 -> 쿠키를 통해 클라이언트를 구분할수 있다

url
문서와 다른 자원들의 위치을 나타냄
url은 3부분으로 나타낸다
- 프로토콜의 종류
- 서버 ip,도메인 주소,포트
- 자원의 위치

http 요청메세지
1. 헤더 => 요청 메서드,요청 uri(요청자원의 위치),http 프로토컬 버전
2. 빈줄
3. 바디(get방식은 요청바디가 없음)

http 응답 메세지
1.헤더 => http 프로토컬 버전,응답코드,응답메시지,날짜,웹서버 이름 버전, 컨텐츠 타입, 케시제어방식, 컨텐츠길이등
2. 빈줄
3. 실제 응답 리소스 데이터
------------------------------------------------------------------------------------
웹프론트엔드
사용자에게 다양한 웹 콘텐츠(리소스)를 제공,사용자의 요청을 반응하여 동작

프론트엔드 역활
1. 콘텐츠를 잘 보여주기 위해 구조를 잘짜야함
2. 적절한 배치와 일관적인 디자인(가독성)
3. 사용자 요청이 잘 반영
html,css,javascript

백엔드 역활
서버 사이드,요청을 받아 결과를 사용자에게 넘겨주는 역활
1. 프로그래밍 언어
2. 웹의 동작 원리
3. 알고리즘, 자료구조 등 프로그래밍 기반 지식
4. 운영체제, 네트워크 등에 대한 이해
5. 프레임워크 이해
6. DBMS 이해
------------------------------------------------------------------------------------
브라우저(browsers)
html 구조 파싱(의미 파악)후 DOM트리형식,css파일파싱 ->렌더트리형식으로 변환,레이아웃 추가->화면을 그림

파싱(컴파일러)
토큰을 트리형식으로 만든후 순서대로 값의 처리가 일어난다
------------------------------------------------------------------------------------
서버
웹 서버=> 소프트웨어(Software), 웹 서버 소프트웨어가 동작하는 컴퓨터를 말함, 클라이언트(브라우저)와 웹서버는 Http로 통신

Apache
가장 많이 사용하는 웹서버중 하나, 오픈소스로 이루어져 있음

DBMS(database management system)
다수의 사용자들이 DB에 접근할수 있게 해주눈 소프트웨어
ex) mysql,oracle등

미들웨어(MiddleWare)
DBMS를 직접 클라이언트가 연결되어 동작하는 방법이 여러가지 단점이 있음 -> 미들웨어 등장 클라이언트와 DBMS 사이에 서버를둠
*클라이언트는 미들웨어에 입력값만 보내주면 됨

WAS(Web Application Server)
일종의 미들웨어,복잡한 기능을 동작하게 함,기본적인 웹서버도 가능
기본기능
- 프로그햄 실행환경과 데이터 베이스 접속기능을 제공
- 여러게의 트렌잭션(논리적인 작업 단위)을 관리
- 업무를 처리하는 비지니스 로직을 수행

웹 서버 vs WAS
WAS도 보통 자체적으로 웹 서버 기능을 내장
WAS가 가지고 있는 웹 서버도 정적인 콘텐츠를 처리하는 데 있어서 성능상 큰 차이가 없음
규모가 커질수록 웹 서버와 WAS를 분리
자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 대체로 분리
웹서버는 상대적으로 WAS보다 간단한구조->대용량 웹을 무중단으로 사용하게 하기위해
------------------------------------------------------------------------------------