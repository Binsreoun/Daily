github 사용법

##fork

1. 저장소 우측 상단의 fork 버튼 클릭

2. 저장소를 자신의 컴퓨터로 clone
git clone -b {본인_아이디} --single-branch https://github.com/{본인_아이디}/{저장소 아이디}
ex) git clone -b javajigi --single-branch https://github.com/javajigi/java-racingcar

3. 디렉토리로 이동
cd {저장소 아이디}
ex) cd java-racingcar

4. 브랜치 생성
git checkout -b 브랜치이름
ex) git checkout -b step1

5. 통합개발도구(Eclipse 또는 IntelliJ)로 가져감(import)

6. 기능 구현 후 add, commit
git status // 변경된 파일 확인
git add -A(또는 .) // 변경된 전체 파일을 한번에 반영
git commit -m "메시지" // 작업한 내용을 메시지에 기록

7. 원격 저장소에 올리기
git push origin 브랜치이름
ex) git push origin step1

##remote

1. 저장소를 자신의 컴퓨터로 clone
git clone -b {본인_아이디} --single-branch https://github.com/{본인_아이디}/{저장소 아이디}
ex) $ git clone -b binsreoun --single-branch https://github.com/Binsreoun/java-lotto.git

2. 디렉토리로 이동
cd {저장소 아이디}
ex) $ cd java-lotto


3. 브랜치 생성
git checkout -b 브랜치이름
ex)$ git checkout -b step1

4. remote할 저장소 담기
git remote add{저장할 이름} https://github.com/{저장대상_아이디}/{저장소 아이디}
ex)$ git remote add pair https://github.com/boggydoggy/java-lotto.git

5. 가져갈 브랜치 담기
git pull {저장한 이름} {가져갈 브랜치}
ex)$ git pull pair step1

6. 내 브랜치로 가져온 브랜치 넣기
git push origin {가져갈 브랜치}
$ git push origin step1

##브렌치 변경 및 삭제

1. 브랜치를 삭제 
git checkout 본인_아이디
git branch -D 삭제할_브랜치이름
ex) git checkout javajigi
ex) git branch -D step1

2. remote단계

git remote add {저장소_별칭} base_저장소_url
ex) git remote add upstream https://github.com/next-step/java-racingcar.git
git remote -v

3. next-step 저장소에서 자기 브랜치 가져오기(또는 갱신하기)

git fetch upstream {본인_아이디}
ex) git fetch upstream javajigi

4. 저장소와 로컬 저장소의 브랜치를 동기화한다.

git rebase upstream/본인_아이디
ex) git rebase upstream/javajigi

5.새로운 브랜치를 생성한다.

git checkout -b 브랜치이름
ex) git checkout -b step2

충돌을 해결방법
git checkout 본인_아이디(예: git checkout javajigi) 명령을 실행해 계정 브랜치로 이동한다.
git reset --hard upstream/본인_아이디(예: git reset --hard upstream/javajigi)
git checkout 기능_브랜치(예: git checkout step2)
git merge 본인_아이디(예: git merge javajigi)
